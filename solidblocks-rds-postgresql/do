#!/usr/bin/env bash

set -eu

DIR="$(cd "$(dirname "$0")" ; pwd -P)"

export VERSION="${GITHUB_REF_NAME:-snapshot}"

DOCKER_REGISTRY="ghcr.io"
DOCKER_REPOSITORY="pellepelster"
DOCKER_IMAGE_NAME="solidblocks-rds-postgresql"
DOCKER_OPTIONS="${DOCKER_OPTIONS:-}"

POSTGRES_VERSIONS="14 15"

source "${DIR}/../solidblocks-shell/lib/software.sh"

function task_usage {
  echo "Usage: $0 ..."
  exit 1
}

function task_test {
  if [[ "${SKIP_TESTS:-}" == "true" ]]; then
    exit 0
  fi

  software_ensure_terraform
  software_set_export_path
  (
    cd "${DIR}/test/terraform"
    terraform init
    terraform apply --auto-approve
  )
  (
    export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY:-$(pass solidblocks/aws/test/secret_access_key)}"
    export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID:-$(pass solidblocks/aws/test/access_key)}"

    cd "${DIR}/test"
    ./gradlew check
  )
}

function task_build {
  (
    cd "${DIR}"
    mkdir -p "${DIR}/build"

    for postgres_version in ${POSTGRES_VERSIONS}; do
      docker buildx build \
        --platform linux/arm,linux/amd64,linux/arm64 \
        --push \
        --build-arg POSTGRES_VERSION=${postgres_version} \
        --tag "${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/${DOCKER_IMAGE_NAME}:${postgres_version}-${VERSION}-rc" \
        .
    done
  )
}

function task_release_docker {
  for postgres_version in ${POSTGRES_VERSIONS}; do
    docker buildx imagetools create --tag "${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/${DOCKER_IMAGE_NAME}:${postgres_version}-${VERSION}" "${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/${DOCKER_IMAGE_NAME}:${postgres_version}-${VERSION}-rc"
  done
}

function task_clean {
  rm -rf "${DIR}/build"
  rm -rf ${DIR}/test/terraform/.terraform
  rm -rf ${DIR}/test/terraform/*.tfstate
  rm -rf ${DIR}/test/terraform/*.tfstate.backup
  rm -rf ${DIR}/test/terraform/*.lock.hcl
}

function task_format {
  (
    cd "${DIR}/test"
    ./gradlew spotlessApply
    terraform fmt -recursive
  )
}

arg=${1:-}
shift || true
case ${arg} in
  build) task_build "$@" ;;
  test) task_test "$@" ;;
  format) task_format "$@" ;;
  clean) task_clean "$@" ;;
  release-docker) task_release_docker "$@" ;;
  *) task_usage ;;
esac