/*
 * This file is generated by jOOQ.
 */
package de.solidblocks.config.db

import de.solidblocks.config.db.tables.Clouds
import de.solidblocks.config.db.tables.CloudsEnvironments
import de.solidblocks.config.db.tables.ConfigurationValues
import de.solidblocks.config.db.tables.Tenants
import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl
import kotlin.collections.List

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA = DefaultSchema()
    }

    /**
     * The table <code>CLOUDS</code>.
     */
    val CLOUDS get() = Clouds.CLOUDS

    /**
     * The table <code>CLOUDS_ENVIRONMENTS</code>.
     */
    val CLOUDS_ENVIRONMENTS get() = CloudsEnvironments.CLOUDS_ENVIRONMENTS

    /**
     * The table <code>CONFIGURATION_VALUES</code>.
     */
    val CONFIGURATION_VALUES get() = ConfigurationValues.CONFIGURATION_VALUES

    /**
     * The table <code>TENANTS</code>.
     */
    val TENANTS get() = Tenants.TENANTS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Clouds.CLOUDS,
        CloudsEnvironments.CLOUDS_ENVIRONMENTS,
        ConfigurationValues.CONFIGURATION_VALUES,
        Tenants.TENANTS
    )
}
