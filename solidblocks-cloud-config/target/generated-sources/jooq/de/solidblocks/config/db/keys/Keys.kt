/*
 * This file is generated by jOOQ.
 */
package de.solidblocks.config.db.keys

import de.solidblocks.config.db.tables.Clouds
import de.solidblocks.config.db.tables.CloudsEnvironments
import de.solidblocks.config.db.tables.ConfigurationValues
import de.solidblocks.config.db.tables.Tenants
import de.solidblocks.config.db.tables.records.CloudsEnvironmentsRecord
import de.solidblocks.config.db.tables.records.CloudsRecord
import de.solidblocks.config.db.tables.records.ConfigurationValuesRecord
import de.solidblocks.config.db.tables.records.TenantsRecord
import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal

// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val PK_CLOUDS: UniqueKey<CloudsRecord> = Internal.createUniqueKey(Clouds.CLOUDS, DSL.name("PK_CLOUDS"), arrayOf(Clouds.CLOUDS.ID), true)
val PK_CLOUDS_ENVIRONMENTS: UniqueKey<CloudsEnvironmentsRecord> = Internal.createUniqueKey(CloudsEnvironments.CLOUDS_ENVIRONMENTS, DSL.name("PK_CLOUDS_ENVIRONMENTS"), arrayOf(CloudsEnvironments.CLOUDS_ENVIRONMENTS.ID), true)
val PK_CONFIGURATION_VALUES: UniqueKey<ConfigurationValuesRecord> = Internal.createUniqueKey(ConfigurationValues.CONFIGURATION_VALUES, DSL.name("PK_CONFIGURATION_VALUES"), arrayOf(ConfigurationValues.CONFIGURATION_VALUES.ID), true)
val PK_TENANTS: UniqueKey<TenantsRecord> = Internal.createUniqueKey(Tenants.TENANTS, DSL.name("PK_TENANTS"), arrayOf(Tenants.TENANTS.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val FK_CLOUDS_ENVIRONMENTS_CLOUD_ID: ForeignKey<CloudsEnvironmentsRecord, CloudsRecord> = Internal.createForeignKey(CloudsEnvironments.CLOUDS_ENVIRONMENTS, DSL.name("FK_CLOUDS_ENVIRONMENTS_CLOUD_ID"), arrayOf(CloudsEnvironments.CLOUDS_ENVIRONMENTS.CLOUD), de.solidblocks.config.db.keys.PK_CLOUDS, arrayOf(Clouds.CLOUDS.ID), true)
val FK_TENANTS_CLOUDS_ENVIRONMENT_ID: ForeignKey<TenantsRecord, CloudsEnvironmentsRecord> = Internal.createForeignKey(Tenants.TENANTS, DSL.name("FK_TENANTS_CLOUDS_ENVIRONMENT_ID"), arrayOf(Tenants.TENANTS.ENVRIONMENT), de.solidblocks.config.db.keys.PK_CLOUDS_ENVIRONMENTS, arrayOf(CloudsEnvironments.CLOUDS_ENVIRONMENTS.ID), true)
