#!/usr/bin/env bash

set -eu

DIR="$(cd "$(dirname "$0")" ; pwd -P)"
#TESTCONTAINER_IMAGES="amazonlinux-2 debian-10 debian-11 ubuntu-20.04 ubuntu-22.04"
TESTCONTAINER_IMAGES="debian-10 debian-11 ubuntu-20.04 ubuntu-22.04"

export VERSION="${GITHUB_REF_NAME:-snapshot}"

DOCKER_REGISTRY="ghcr.io"
DOCKER_REPOSITORY="pellepelster"

source "${DIR}/lib/log.sh"

function task_build {
  (
    mkdir -p "${DIR}/build/solidblocks-shell"
    cp -rv ${DIR}/lib/* "${DIR}/build/solidblocks-shell/"
    cd "${DIR}/build"
    echo "creating distribution '${DIR}/build/solidblocks-shell-${VERSION}.zip'"
    zip -r "${DIR}/build/solidblocks-shell-${VERSION}.zip" solidblocks-shell/*.sh

    mkdir -p "${DIR}/build/documentation/generated"

    local checksum="$(sha256sum "${DIR}/build/solidblocks-shell-${VERSION}.zip" | cut -f 1 -d " ")"
    sed \
      --expression="s/__SOLIDBLOCKS_VERSION__/${VERSION}/g" \
      --expression="s/__SOLIDBLOCKS_SHELL_CHECKSUM__/${checksum}/g"  < "${DIR}/installer/bootstrap_solidblocks.template" > "${DIR}/build/documentation/generated/shell_bootstrap_solidblocks"

    sed "/__BOOTSTRAP_SOLIDBLOCKS__/e cat ${DIR}/build/documentation/generated/shell_bootstrap_solidblocks" "${DIR}/examples/minimal-skeleton/do.template" | grep -v "__BOOTSTRAP_SOLIDBLOCKS__" > "${DIR}/build/documentation/generated/shell_minimal_skeleton_do"
    chmod +x "${DIR}/build/documentation/generated/shell_minimal_skeleton_do"
  )
}

function task_lint {
  ensure_environment
  find "${DIR}/lib" -name "*.sh" -exec shellcheck {} \;
}

function task_test_unit {

  for test in ${DIR}/test/unit/test_*.sh; do
      log_divider_header ${test}
      VERSION=${VERSION} ${test}
      log_divider_footer
  done
}


function task_test_integration_prepare {

    for image in ${TESTCONTAINER_IMAGES}
    do
    (
      cd "${DIR}/test/docker/${image}"
      docker build --no-cache -t "${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/solidblocks-test-${image}" -f "Dockerfile" .
      docker push "${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/solidblocks-test-${image}"
    )
    done
}

function task_test_integration {

  for test in ${DIR}/test/integration/test_b*.sh; do
      log_divider_header ${test}
      VERSION=${VERSION} ${test}
      log_divider_footer
  done

  for image in ${TESTCONTAINER_IMAGES}
  do
      log_divider_header "running tests on '${image}'"
      docker run --network host -v /var/run/docker.sock:/var/run/docker.sock -v "${DIR}":/test "${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/solidblocks-test-${image}" /test/do test-unit
      log_divider_footer
  done

}

function task_test {
  if [[ -n "${SKIP_TESTS:-}" ]]; then
    exit 0
  fi

  task_test_unit
  task_test_integration
}

function task_release_docker {
  echo ""
}

function task_clean {
  rm -rf "${DIR}/build"
}

function task_usage {
  echo "Usage: $0 ..."
  exit 1
}

arg=${1:-}
shift || true
case ${arg} in
  lint) task_lint "$@" ;;
  clean) task_clean "$@" ;;
  build) task_build "$@" ;;
  test) task_test "$@" ;;
  test-unit) task_test_unit "$@" ;;
  test-integration) task_test_integration "$@" ;;
  test-integration-prepare) task_test_integration_prepare "$@" ;;
  release-docker) task_release_docker "$@" ;;
  *) task_usage ;;
esac